// OR-16 chip (working)
CHIP Or16 {
    IN a[16], b[16];
    OUT out[16];

    PARTS:
    Not(in=a[0], out=notA0);
    Not(in=b[0], out=notB0);
    And(a=notA0, b=notB0, out=and0);
    Not(in=and0, out=out[0]);

    Not(in=a[1], out=notA1);
    Not(in=b[1], out=notB1);
    And(a=notA1, b=notB1, out=and1);
    Not(in=and1, out=out[1]);
    
    Not(in=a[2], out=notA2);
    Not(in=b[2], out=notB2);
    And(a=notA2, b=notB2, out=and2);
    Not(in=and2, out=out[2]);

    Not(in=a[3], out=notA3);
    Not(in=b[3], out=notB3);
    And(a=notA3, b=notB3, out=and3);
    Not(in=and3, out=out[3]);

    Not(in=a[4], out=notA4);
    Not(in=b[4], out=notB4);
    And(a=notA4, b=notB4, out=and4);
    Not(in=and4, out=out[4]);

    Not(in=a[5], out=notA5);
    Not(in=b[5], out=notB5);
    And(a=notA5, b=notB5, out=and5);
    Not(in=and5, out=out[5]);

    Not(in=a[6], out=notA6);
    Not(in=b[6], out=notB6);
    And(a=notA6, b=notB6, out=and6);
    Not(in=and6, out=out[6]);

    Not(in=a[7], out=notA7);
    Not(in=b[7], out=notB7);
    And(a=notA7, b=notB7, out=and7);
    Not(in=and7, out=out[7]);

    Not(in=a[8], out=notA8);
    Not(in=b[8], out=notB8);
    And(a=notA8, b=notB8, out=and8);
    Not(in=and8, out=out[8]);

    Not(in=a[9], out=notA9);
    Not(in=b[9], out=notB9);
    And(a=notA9, b=notB9, out=and9);
    Not(in=and9, out=out[9]);

    Not(in=a[10], out=notA10);
    Not(in=b[10], out=notB10);
    And(a=notA10, b=notB10, out=and10);
    Not(in=and10, out=out[10]);

    Not(in=a[11], out=notA11);
    Not(in=b[11], out=notB11);
    And(a=notA11, b=notB11, out=and11);
    Not(in=and11, out=out[11]);

    Not(in=a[12], out=notA12);
    Not(in=b[12], out=notB12);
    And(a=notA12, b=notB12, out=and12);
    Not(in=and12, out=out[12]);

    Not(in=a[13], out=notA13);
    Not(in=b[13], out=notB13);
    And(a=notA13, b=notB13, out=and13);
    Not(in=and13, out=out[13]);

    Not(in=a[14], out=notA14);
    Not(in=b[14], out=notB14);
    And(a=notA14, b=notB14, out=and14);
    Not(in=and14, out=out[14]);

    Not(in=a[15], out=notA15);
    Not(in=b[15], out=notB15);
    And(a=notA15, b=notB15, out=and15);
    Not(in=and15, out=out[15]);
}
